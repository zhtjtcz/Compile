
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'CompUnitAnd Comma Const Deq Div Else Equal Geq Ident If Int LBrace LPar Leq Less Main Minus Mod More Neq Not Number Or Plus RBrace RPar Return Semicolon Times\n\tCompUnit : FuncDef\n\t\n\tDecl : ConstDecl\n\t\t | VarDecl\n\t\n\tConstDecl : Const BType ConstDefs Semicolon\n\t\n\tConstDefs : ConstDef\n\t\t\t  | ConstDefs Comma ConstDef\n\t\n\tBType : Int\n\t\n\tConstDef : Ident Equal ConstInitVal\n\t\n\tConstInitVal : ConstExp\n\t\n\tConstExp : AddExp\n\t\n\tVarDecl : BType VarDefs Semicolon\n\t\n\tVarDefs : VarDef\n\t\t\t| VarDefs Comma VarDef\n\t\n\tVarDef : Ident Equal InitVal\n           | Ident\n\t\n\tInitVal : Exp\n\t\n\tFuncDef : FuncType Main LPar RPar Block\n\t\n\tFuncType : Int\n\t\n\tBlock : LBrace BlockItems RBrace\n\t\n\tBlockItems :\n\t\t\t   | BlockItems BlockItem\n\t\n\tBlockItem : Decl\n\t\t\t  | Stmt\n\t\n\tStmt : Semicolon\n\t\t | Block\n\t\t | Exp Semicolon\n\t\t | Return Exp Semicolon\n\t\t | LVal Equal Exp Semicolon\n\t\t | If LPar Cond RPar Stmt Else Stmt\n\t\t | If LPar Cond RPar Stmt\n\t\n\tLVal : Ident\n\t\n\tExp : AddExp\n\t\n\tAddExp : MulExp \n           | AddExp Plus MulExp\n\t\t   | AddExp Minus MulExp\n\t\n\tMulExp : UnaryExp\n           | MulExp Times UnaryExp\n\t\t   | MulExp Div UnaryExp\n\t\t   | MulExp Mod UnaryExp\n\t\n\tUnaryExp : PrimaryExp\n\t\t\t | UnaryOp UnaryExp\n\t\t\t | Ident LPar RPar\n\t\t\t | Ident LPar FuncRParams RPar\n\t\n\tFuncRParams : Exp\n\t\t\t\t| Exp Exps\n\t\n\tExps : Comma Exp\n\t\t | Comma Exp Exps\n\t\n\tPrimaryExp : LPar Exp RPar\n\t\t\t   | Number\n\t\t\t   | LVal\n\t\n\tUnaryOp : Plus\n\t\t\t| Minus\n\t\t\t| Not\n\t\n\tCond : LOrExp\n\t\n\tLOrExp : LAndExp\n           | LOrExp Or LAndExp\n\t\n\tLAndExp : EqExp\n            | LAndExp And EqExp\n\t\n\tEqExp : RelExp\n    \t  | EqExp Deq RelExp\n\t\t  | EqExp Neq RelExp\n\t\n\tRelExp : AddExp\n    \t   | RelExp Less AddExp\n\t\t   | RelExp More AddExp\n\t\t   | RelExp Leq AddExp\n\t\t   | RelExp Geq AddExp\n\t'
    
_lr_action_items = {'Int':([0,9,10,11,12,13,14,15,16,17,18,24,37,55,67,78,88,97,113,],[4,-20,28,-19,-21,-22,-23,-2,-3,-24,-25,28,-26,-27,-11,-28,-4,-30,-29,]),'$end':([1,2,8,11,],[0,-1,-17,-19,]),'Main':([3,4,],[5,-18,]),'LPar':([5,9,10,11,12,13,14,15,16,17,18,20,22,23,27,30,31,34,36,37,39,41,42,48,49,50,51,52,53,55,67,69,78,79,80,81,82,83,84,85,86,87,88,90,96,97,111,113,],[6,-20,23,-19,-21,-22,-23,-2,-3,-24,-25,23,42,23,50,-51,-52,23,-53,-26,50,23,23,23,23,23,23,23,23,-27,-11,23,-28,23,23,23,23,23,23,23,23,23,-4,23,23,-30,23,-29,]),'RPar':([6,26,29,32,33,35,39,40,43,50,54,57,58,59,60,61,62,63,70,71,72,73,74,75,76,77,94,95,98,99,100,101,102,103,104,105,110,112,],[7,-32,-33,-36,-40,-49,-31,-50,63,72,-41,79,-54,-55,-57,-59,-62,-48,-34,-35,-42,94,-44,-37,-38,-39,-43,-45,-56,-58,-60,-61,-63,-64,-65,-66,-46,-47,]),'LBrace':([7,9,10,11,12,13,14,15,16,17,18,37,55,67,78,79,88,97,111,113,],[9,-20,9,-19,-21,-22,-23,-2,-3,-24,-25,-26,-27,-11,-28,9,-4,-30,9,-29,]),'RBrace':([9,10,11,12,13,14,15,16,17,18,37,55,67,78,88,97,113,],[-20,11,-19,-21,-22,-23,-2,-3,-24,-25,-26,-27,-11,-28,-4,-30,-29,]),'Semicolon':([9,10,11,12,13,14,15,16,17,18,19,21,26,27,29,32,33,35,37,38,39,40,45,46,47,54,55,56,63,64,65,67,70,71,72,75,76,77,78,79,88,91,92,93,94,97,106,107,108,109,111,113,],[-20,17,-19,-21,-22,-23,-2,-3,-24,-25,37,-50,-32,-31,-33,-36,-40,-49,-26,55,-31,-50,67,-12,-15,-41,-27,78,-48,88,-5,-11,-34,-35,-42,-37,-38,-39,-28,17,-4,-13,-14,-16,-43,-30,-6,-8,-9,-10,17,-29,]),'Return':([9,10,11,12,13,14,15,16,17,18,37,55,67,78,79,88,97,111,113,],[-20,20,-19,-21,-22,-23,-2,-3,-24,-25,-26,-27,-11,-28,20,-4,-30,20,-29,]),'If':([9,10,11,12,13,14,15,16,17,18,37,55,67,78,79,88,97,111,113,],[-20,22,-19,-21,-22,-23,-2,-3,-24,-25,-26,-27,-11,-28,22,-4,-30,22,-29,]),'Const':([9,10,11,12,13,14,15,16,17,18,37,55,67,78,88,97,113,],[-20,24,-19,-21,-22,-23,-2,-3,-24,-25,-26,-27,-11,-28,-4,-30,-29,]),'Ident':([9,10,11,12,13,14,15,16,17,18,20,23,25,28,30,31,34,36,37,41,42,44,48,49,50,51,52,53,55,67,68,69,78,79,80,81,82,83,84,85,86,87,88,89,90,96,97,111,113,],[-20,27,-19,-21,-22,-23,-2,-3,-24,-25,39,39,47,-7,-51,-52,39,-53,-26,39,39,66,39,39,39,39,39,39,-27,-11,47,39,-28,27,39,39,39,39,39,39,39,39,-4,66,39,39,-30,27,-29,]),'Number':([9,10,11,12,13,14,15,16,17,18,20,23,30,31,34,36,37,41,42,48,49,50,51,52,53,55,67,69,78,79,80,81,82,83,84,85,86,87,88,90,96,97,111,113,],[-20,35,-19,-21,-22,-23,-2,-3,-24,-25,35,35,-51,-52,35,-53,-26,35,35,35,35,35,35,35,35,-27,-11,35,-28,35,35,35,35,35,35,35,35,35,-4,35,35,-30,35,-29,]),'Plus':([9,10,11,12,13,14,15,16,17,18,20,21,23,26,27,29,30,31,32,33,34,35,36,37,39,40,41,42,48,49,50,51,52,53,54,55,62,63,67,69,70,71,72,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,94,96,97,102,103,104,105,109,111,113,],[-20,30,-19,-21,-22,-23,-2,-3,-24,-25,30,-50,30,48,-31,-33,-51,-52,-36,-40,30,-49,-53,-26,-31,-50,30,30,30,30,30,30,30,30,-41,-27,48,-48,-11,30,-34,-35,-42,-37,-38,-39,-28,30,30,30,30,30,30,30,30,30,-4,30,-43,30,-30,48,48,48,48,48,30,-29,]),'Minus':([9,10,11,12,13,14,15,16,17,18,20,21,23,26,27,29,30,31,32,33,34,35,36,37,39,40,41,42,48,49,50,51,52,53,54,55,62,63,67,69,70,71,72,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,94,96,97,102,103,104,105,109,111,113,],[-20,31,-19,-21,-22,-23,-2,-3,-24,-25,31,-50,31,49,-31,-33,-51,-52,-36,-40,31,-49,-53,-26,-31,-50,31,31,31,31,31,31,31,31,-41,-27,49,-48,-11,31,-34,-35,-42,-37,-38,-39,-28,31,31,31,31,31,31,31,31,31,-4,31,-43,31,-30,49,49,49,49,49,31,-29,]),'Not':([9,10,11,12,13,14,15,16,17,18,20,23,30,31,34,36,37,41,42,48,49,50,51,52,53,55,67,69,78,79,80,81,82,83,84,85,86,87,88,90,96,97,111,113,],[-20,36,-19,-21,-22,-23,-2,-3,-24,-25,36,36,-51,-52,36,-53,-26,36,36,36,36,36,36,36,36,-27,-11,36,-28,36,36,36,36,36,36,36,36,36,-4,36,36,-30,36,-29,]),'Else':([11,17,18,37,55,78,97,113,],[-19,-24,-25,-26,-27,-28,111,-29,]),'Equal':([21,27,47,66,],[41,-31,69,90,]),'Times':([21,27,29,32,33,35,39,40,54,63,70,71,72,75,76,77,94,],[-50,-31,51,-36,-40,-49,-31,-50,-41,-48,51,51,-42,-37,-38,-39,-43,]),'Div':([21,27,29,32,33,35,39,40,54,63,70,71,72,75,76,77,94,],[-50,-31,52,-36,-40,-49,-31,-50,-41,-48,52,52,-42,-37,-38,-39,-43,]),'Mod':([21,27,29,32,33,35,39,40,54,63,70,71,72,75,76,77,94,],[-50,-31,53,-36,-40,-49,-31,-50,-41,-48,53,53,-42,-37,-38,-39,-43,]),'Comma':([26,29,32,33,35,39,40,45,46,47,54,63,64,65,70,71,72,74,75,76,77,91,92,93,94,106,107,108,109,110,],[-32,-33,-36,-40,-49,-31,-50,68,-12,-15,-41,-48,89,-5,-34,-35,-42,96,-37,-38,-39,-13,-14,-16,-43,-6,-8,-9,-10,96,]),'Less':([29,32,33,35,39,40,54,61,62,63,70,71,72,75,76,77,94,100,101,102,103,104,105,],[-33,-36,-40,-49,-31,-50,-41,84,-62,-48,-34,-35,-42,-37,-38,-39,-43,84,84,-63,-64,-65,-66,]),'More':([29,32,33,35,39,40,54,61,62,63,70,71,72,75,76,77,94,100,101,102,103,104,105,],[-33,-36,-40,-49,-31,-50,-41,85,-62,-48,-34,-35,-42,-37,-38,-39,-43,85,85,-63,-64,-65,-66,]),'Leq':([29,32,33,35,39,40,54,61,62,63,70,71,72,75,76,77,94,100,101,102,103,104,105,],[-33,-36,-40,-49,-31,-50,-41,86,-62,-48,-34,-35,-42,-37,-38,-39,-43,86,86,-63,-64,-65,-66,]),'Geq':([29,32,33,35,39,40,54,61,62,63,70,71,72,75,76,77,94,100,101,102,103,104,105,],[-33,-36,-40,-49,-31,-50,-41,87,-62,-48,-34,-35,-42,-37,-38,-39,-43,87,87,-63,-64,-65,-66,]),'Deq':([29,32,33,35,39,40,54,60,61,62,63,70,71,72,75,76,77,94,99,100,101,102,103,104,105,],[-33,-36,-40,-49,-31,-50,-41,82,-59,-62,-48,-34,-35,-42,-37,-38,-39,-43,82,-60,-61,-63,-64,-65,-66,]),'Neq':([29,32,33,35,39,40,54,60,61,62,63,70,71,72,75,76,77,94,99,100,101,102,103,104,105,],[-33,-36,-40,-49,-31,-50,-41,83,-59,-62,-48,-34,-35,-42,-37,-38,-39,-43,83,-60,-61,-63,-64,-65,-66,]),'And':([29,32,33,35,39,40,54,59,60,61,62,63,70,71,72,75,76,77,94,98,99,100,101,102,103,104,105,],[-33,-36,-40,-49,-31,-50,-41,81,-57,-59,-62,-48,-34,-35,-42,-37,-38,-39,-43,81,-58,-60,-61,-63,-64,-65,-66,]),'Or':([29,32,33,35,39,40,54,58,59,60,61,62,63,70,71,72,75,76,77,94,98,99,100,101,102,103,104,105,],[-33,-36,-40,-49,-31,-50,-41,80,-55,-57,-59,-62,-48,-34,-35,-42,-37,-38,-39,-43,-56,-58,-60,-61,-63,-64,-65,-66,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'CompUnit':([0,],[1,]),'FuncDef':([0,],[2,]),'FuncType':([0,],[3,]),'Block':([7,10,79,111,],[8,18,18,18,]),'BlockItems':([9,],[10,]),'BlockItem':([10,],[12,]),'Decl':([10,],[13,]),'Stmt':([10,79,111,],[14,97,113,]),'ConstDecl':([10,],[15,]),'VarDecl':([10,],[16,]),'Exp':([10,20,23,41,50,69,79,96,111,],[19,38,43,56,74,93,19,110,19,]),'LVal':([10,20,23,34,41,42,48,49,50,51,52,53,69,79,80,81,82,83,84,85,86,87,90,96,111,],[21,40,40,40,40,40,40,40,40,40,40,40,40,21,40,40,40,40,40,40,40,40,40,40,21,]),'BType':([10,24,],[25,44,]),'AddExp':([10,20,23,41,42,50,69,79,80,81,82,83,84,85,86,87,90,96,111,],[26,26,26,26,62,26,26,26,62,62,62,62,102,103,104,105,109,26,26,]),'MulExp':([10,20,23,41,42,48,49,50,69,79,80,81,82,83,84,85,86,87,90,96,111,],[29,29,29,29,29,70,71,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'UnaryExp':([10,20,23,34,41,42,48,49,50,51,52,53,69,79,80,81,82,83,84,85,86,87,90,96,111,],[32,32,32,54,32,32,32,32,32,75,76,77,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'PrimaryExp':([10,20,23,34,41,42,48,49,50,51,52,53,69,79,80,81,82,83,84,85,86,87,90,96,111,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'UnaryOp':([10,20,23,34,41,42,48,49,50,51,52,53,69,79,80,81,82,83,84,85,86,87,90,96,111,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'VarDefs':([25,],[45,]),'VarDef':([25,68,],[46,91,]),'Cond':([42,],[57,]),'LOrExp':([42,],[58,]),'LAndExp':([42,80,],[59,98,]),'EqExp':([42,80,81,],[60,60,99,]),'RelExp':([42,80,81,82,83,],[61,61,61,100,101,]),'ConstDefs':([44,],[64,]),'ConstDef':([44,89,],[65,106,]),'FuncRParams':([50,],[73,]),'InitVal':([69,],[92,]),'Exps':([74,110,],[95,112,]),'ConstInitVal':([90,],[107,]),'ConstExp':([90,],[108,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> CompUnit","S'",1,None,None,None),
  ('CompUnit -> FuncDef','CompUnit',1,'p_CompUnit','analyze.py',8),
  ('Decl -> ConstDecl','Decl',1,'p_Decl','analyze.py',14),
  ('Decl -> VarDecl','Decl',1,'p_Decl','analyze.py',15),
  ('ConstDecl -> Const BType ConstDefs Semicolon','ConstDecl',4,'p_ConstDecl','analyze.py',21),
  ('ConstDefs -> ConstDef','ConstDefs',1,'p_ConstDefs','analyze.py',27),
  ('ConstDefs -> ConstDefs Comma ConstDef','ConstDefs',3,'p_ConstDefs','analyze.py',28),
  ('BType -> Int','BType',1,'p_BType','analyze.py',37),
  ('ConstDef -> Ident Equal ConstInitVal','ConstDef',3,'p_ConstDef','analyze.py',44),
  ('ConstInitVal -> ConstExp','ConstInitVal',1,'p_ConstInitVal','analyze.py',51),
  ('ConstExp -> AddExp','ConstExp',1,'p_ConstExp','analyze.py',57),
  ('VarDecl -> BType VarDefs Semicolon','VarDecl',3,'p_VarDecl','analyze.py',63),
  ('VarDefs -> VarDef','VarDefs',1,'p_Vardefs','analyze.py',69),
  ('VarDefs -> VarDefs Comma VarDef','VarDefs',3,'p_Vardefs','analyze.py',70),
  ('VarDef -> Ident Equal InitVal','VarDef',3,'p_VarDef','analyze.py',79),
  ('VarDef -> Ident','VarDef',1,'p_VarDef','analyze.py',80),
  ('InitVal -> Exp','InitVal',1,'p_InitVal','analyze.py',91),
  ('FuncDef -> FuncType Main LPar RPar Block','FuncDef',5,'p_Funcdef','analyze.py',97),
  ('FuncType -> Int','FuncType',1,'p_FuncType','analyze.py',106),
  ('Block -> LBrace BlockItems RBrace','Block',3,'p_Block','analyze.py',112),
  ('BlockItems -> <empty>','BlockItems',0,'p_BlockItems','analyze.py',118),
  ('BlockItems -> BlockItems BlockItem','BlockItems',2,'p_BlockItems','analyze.py',119),
  ('BlockItem -> Decl','BlockItem',1,'p_BlockItem','analyze.py',131),
  ('BlockItem -> Stmt','BlockItem',1,'p_BlockItem','analyze.py',132),
  ('Stmt -> Semicolon','Stmt',1,'p_Stmt','analyze.py',139),
  ('Stmt -> Block','Stmt',1,'p_Stmt','analyze.py',140),
  ('Stmt -> Exp Semicolon','Stmt',2,'p_Stmt','analyze.py',141),
  ('Stmt -> Return Exp Semicolon','Stmt',3,'p_Stmt','analyze.py',142),
  ('Stmt -> LVal Equal Exp Semicolon','Stmt',4,'p_Stmt','analyze.py',143),
  ('Stmt -> If LPar Cond RPar Stmt Else Stmt','Stmt',7,'p_Stmt','analyze.py',144),
  ('Stmt -> If LPar Cond RPar Stmt','Stmt',5,'p_Stmt','analyze.py',145),
  ('LVal -> Ident','LVal',1,'p_LVal','analyze.py',166),
  ('Exp -> AddExp','Exp',1,'p_Exp','analyze.py',172),
  ('AddExp -> MulExp','AddExp',1,'p_Addexp','analyze.py',178),
  ('AddExp -> AddExp Plus MulExp','AddExp',3,'p_Addexp','analyze.py',179),
  ('AddExp -> AddExp Minus MulExp','AddExp',3,'p_Addexp','analyze.py',180),
  ('MulExp -> UnaryExp','MulExp',1,'p_MulExp','analyze.py',191),
  ('MulExp -> MulExp Times UnaryExp','MulExp',3,'p_MulExp','analyze.py',192),
  ('MulExp -> MulExp Div UnaryExp','MulExp',3,'p_MulExp','analyze.py',193),
  ('MulExp -> MulExp Mod UnaryExp','MulExp',3,'p_MulExp','analyze.py',194),
  ('UnaryExp -> PrimaryExp','UnaryExp',1,'p_UnaryExp','analyze.py',204),
  ('UnaryExp -> UnaryOp UnaryExp','UnaryExp',2,'p_UnaryExp','analyze.py',205),
  ('UnaryExp -> Ident LPar RPar','UnaryExp',3,'p_UnaryExp','analyze.py',206),
  ('UnaryExp -> Ident LPar FuncRParams RPar','UnaryExp',4,'p_UnaryExp','analyze.py',207),
  ('FuncRParams -> Exp','FuncRParams',1,'p_FuncRParams','analyze.py',220),
  ('FuncRParams -> Exp Exps','FuncRParams',2,'p_FuncRParams','analyze.py',221),
  ('Exps -> Comma Exp','Exps',2,'p_Exps','analyze.py',230),
  ('Exps -> Comma Exp Exps','Exps',3,'p_Exps','analyze.py',231),
  ('PrimaryExp -> LPar Exp RPar','PrimaryExp',3,'p_PrimaryExp','analyze.py',240),
  ('PrimaryExp -> Number','PrimaryExp',1,'p_PrimaryExp','analyze.py',241),
  ('PrimaryExp -> LVal','PrimaryExp',1,'p_PrimaryExp','analyze.py',242),
  ('UnaryOp -> Plus','UnaryOp',1,'p_UnaryOp','analyze.py',256),
  ('UnaryOp -> Minus','UnaryOp',1,'p_UnaryOp','analyze.py',257),
  ('UnaryOp -> Not','UnaryOp',1,'p_UnaryOp','analyze.py',258),
  ('Cond -> LOrExp','Cond',1,'p_Cond','analyze.py',264),
  ('LOrExp -> LAndExp','LOrExp',1,'p_LOrExp','analyze.py',270),
  ('LOrExp -> LOrExp Or LAndExp','LOrExp',3,'p_LOrExp','analyze.py',271),
  ('LAndExp -> EqExp','LAndExp',1,'p_LAndExp','analyze.py',280),
  ('LAndExp -> LAndExp And EqExp','LAndExp',3,'p_LAndExp','analyze.py',281),
  ('EqExp -> RelExp','EqExp',1,'p_EqExp','analyze.py',290),
  ('EqExp -> EqExp Deq RelExp','EqExp',3,'p_EqExp','analyze.py',291),
  ('EqExp -> EqExp Neq RelExp','EqExp',3,'p_EqExp','analyze.py',292),
  ('RelExp -> AddExp','RelExp',1,'p_RelExp','analyze.py',302),
  ('RelExp -> RelExp Less AddExp','RelExp',3,'p_RelExp','analyze.py',303),
  ('RelExp -> RelExp More AddExp','RelExp',3,'p_RelExp','analyze.py',304),
  ('RelExp -> RelExp Leq AddExp','RelExp',3,'p_RelExp','analyze.py',305),
  ('RelExp -> RelExp Geq AddExp','RelExp',3,'p_RelExp','analyze.py',306),
]
