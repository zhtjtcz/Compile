
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'CompUnitAnd Comma Const Deq Div Else Equal Geq Ident If Int LBrace LPar Leq Less Main Minus Mod More Neq Not Number Or Plus RBrace RPar Return Semicolon Times\n\tCompUnit : FuncDef\n\t\n\tDecls : Decl Decls\n\t\t  |\n\t\n\tDecl : ConstDecl\n\t\t | VarDecl\n\t\n\tConstDecl : Const BType ConstDefs Semicolon\n\t\n\tConstDefs : ConstDef\n\t\t\t  | ConstDefs Comma ConstDef\n\t\n\tBType : Int\n\t\n\tConstDef : Ident Equal ConstInitVal\n\t\n\tConstInitVal : ConstExp\n\t\n\tConstExp : AddExp\n\t\n\tVarDecl : BType VarDefs Semicolon\n\t\n\tVarDefs : VarDef\n\t\t\t| VarDefs Comma VarDef\n\t\n\tVarDef : Ident Equal InitVal\n           | Ident\n\t\n\tInitVal : Exp\n\t\n\tFuncDef : FuncType Main LPar RPar Block\n\t\n\tFuncType : Int\n\t\n\tBlock : LBrace BlockItems RBrace\n\t\n\tBlockItems :\n\t\t\t   | BlockItems BlockItem\n\t\n\tBlockItem : Decl\n\t\t\t  | Stmt\n\t\n\tStmt : Semicolon\n\t\t | Block\n\t\t | Exp Semicolon\n\t\t | Return Exp Semicolon\n\t\t | LVal Equal Exp Semicolon\n\t\t | If LPar Cond RPar Stmt Else Stmt\n\t\t | If LPar Cond RPar Stmt\n\t\n\tLVal : Ident\n\t\n\tExp : AddExp\n\t\n\tAddExp : MulExp \n           | AddExp Plus MulExp\n\t\t   | AddExp Minus MulExp\n\t\n\tMulExp : UnaryExp\n           | MulExp Times UnaryExp\n\t\t   | MulExp Div UnaryExp\n\t\t   | MulExp Mod UnaryExp\n\t\n\tUnaryExp : PrimaryExp\n\t\t\t | UnaryOp UnaryExp\n\t\t\t | Ident LPar RPar\n\t\t\t | Ident LPar FuncRParams RPar\n\t\n\tFuncRParams : Exp\n\t\t\t\t| Exp Exps\n\t\n\tExps : Comma Exp\n\t\t | Comma Exp Exps\n\t\n\tPrimaryExp : LPar Exp RPar\n\t\t\t   | Number\n\t\t\t   | LVal\n\t\n\tUnaryOp : Plus\n\t\t\t| Minus\n\t\t\t| Not\n\t\n\tCond : LOrExp\n\t\n\tLOrExp : LAndExp\n           | LOrExp Or LAndExp\n\t\n\tLAndExp : EqExp\n            | LAndExp And EqExp\n\t\n\tEqExp : RelExp\n    \t  | EqExp Deq RelExp\n\t\t  | EqExp Neq RelExp\n\t\n\tRelExp : AddExp\n    \t   | RelExp Less AddExp\n\t\t   | RelExp More AddExp\n\t\t   | RelExp Leq AddExp\n\t\t   | RelExp Geq AddExp\n\t'
    
_lr_action_items = {'Int':([0,9,10,11,12,13,14,15,16,17,18,24,37,55,67,78,88,97,113,],[4,-22,28,-21,-23,-24,-25,-4,-5,-26,-27,28,-28,-29,-13,-30,-6,-32,-31,]),'$end':([1,2,8,11,],[0,-1,-19,-21,]),'Main':([3,4,],[5,-20,]),'LPar':([5,9,10,11,12,13,14,15,16,17,18,20,22,23,27,30,31,34,36,37,39,41,42,48,49,50,51,52,53,55,67,69,78,79,80,81,82,83,84,85,86,87,88,90,96,97,111,113,],[6,-22,23,-21,-23,-24,-25,-4,-5,-26,-27,23,42,23,50,-53,-54,23,-55,-28,50,23,23,23,23,23,23,23,23,-29,-13,23,-30,23,23,23,23,23,23,23,23,23,-6,23,23,-32,23,-31,]),'RPar':([6,26,29,32,33,35,39,40,43,50,54,57,58,59,60,61,62,63,70,71,72,73,74,75,76,77,94,95,98,99,100,101,102,103,104,105,110,112,],[7,-34,-35,-38,-42,-51,-33,-52,63,72,-43,79,-56,-57,-59,-61,-64,-50,-36,-37,-44,94,-46,-39,-40,-41,-45,-47,-58,-60,-62,-63,-65,-66,-67,-68,-48,-49,]),'LBrace':([7,9,10,11,12,13,14,15,16,17,18,37,55,67,78,79,88,97,111,113,],[9,-22,9,-21,-23,-24,-25,-4,-5,-26,-27,-28,-29,-13,-30,9,-6,-32,9,-31,]),'RBrace':([9,10,11,12,13,14,15,16,17,18,37,55,67,78,88,97,113,],[-22,11,-21,-23,-24,-25,-4,-5,-26,-27,-28,-29,-13,-30,-6,-32,-31,]),'Semicolon':([9,10,11,12,13,14,15,16,17,18,19,21,26,27,29,32,33,35,37,38,39,40,45,46,47,54,55,56,63,64,65,67,70,71,72,75,76,77,78,79,88,91,92,93,94,97,106,107,108,109,111,113,],[-22,17,-21,-23,-24,-25,-4,-5,-26,-27,37,-52,-34,-33,-35,-38,-42,-51,-28,55,-33,-52,67,-14,-17,-43,-29,78,-50,88,-7,-13,-36,-37,-44,-39,-40,-41,-30,17,-6,-15,-16,-18,-45,-32,-8,-10,-11,-12,17,-31,]),'Return':([9,10,11,12,13,14,15,16,17,18,37,55,67,78,79,88,97,111,113,],[-22,20,-21,-23,-24,-25,-4,-5,-26,-27,-28,-29,-13,-30,20,-6,-32,20,-31,]),'If':([9,10,11,12,13,14,15,16,17,18,37,55,67,78,79,88,97,111,113,],[-22,22,-21,-23,-24,-25,-4,-5,-26,-27,-28,-29,-13,-30,22,-6,-32,22,-31,]),'Const':([9,10,11,12,13,14,15,16,17,18,37,55,67,78,88,97,113,],[-22,24,-21,-23,-24,-25,-4,-5,-26,-27,-28,-29,-13,-30,-6,-32,-31,]),'Ident':([9,10,11,12,13,14,15,16,17,18,20,23,25,28,30,31,34,36,37,41,42,44,48,49,50,51,52,53,55,67,68,69,78,79,80,81,82,83,84,85,86,87,88,89,90,96,97,111,113,],[-22,27,-21,-23,-24,-25,-4,-5,-26,-27,39,39,47,-9,-53,-54,39,-55,-28,39,39,66,39,39,39,39,39,39,-29,-13,47,39,-30,27,39,39,39,39,39,39,39,39,-6,66,39,39,-32,27,-31,]),'Number':([9,10,11,12,13,14,15,16,17,18,20,23,30,31,34,36,37,41,42,48,49,50,51,52,53,55,67,69,78,79,80,81,82,83,84,85,86,87,88,90,96,97,111,113,],[-22,35,-21,-23,-24,-25,-4,-5,-26,-27,35,35,-53,-54,35,-55,-28,35,35,35,35,35,35,35,35,-29,-13,35,-30,35,35,35,35,35,35,35,35,35,-6,35,35,-32,35,-31,]),'Plus':([9,10,11,12,13,14,15,16,17,18,20,21,23,26,27,29,30,31,32,33,34,35,36,37,39,40,41,42,48,49,50,51,52,53,54,55,62,63,67,69,70,71,72,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,94,96,97,102,103,104,105,109,111,113,],[-22,30,-21,-23,-24,-25,-4,-5,-26,-27,30,-52,30,48,-33,-35,-53,-54,-38,-42,30,-51,-55,-28,-33,-52,30,30,30,30,30,30,30,30,-43,-29,48,-50,-13,30,-36,-37,-44,-39,-40,-41,-30,30,30,30,30,30,30,30,30,30,-6,30,-45,30,-32,48,48,48,48,48,30,-31,]),'Minus':([9,10,11,12,13,14,15,16,17,18,20,21,23,26,27,29,30,31,32,33,34,35,36,37,39,40,41,42,48,49,50,51,52,53,54,55,62,63,67,69,70,71,72,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,94,96,97,102,103,104,105,109,111,113,],[-22,31,-21,-23,-24,-25,-4,-5,-26,-27,31,-52,31,49,-33,-35,-53,-54,-38,-42,31,-51,-55,-28,-33,-52,31,31,31,31,31,31,31,31,-43,-29,49,-50,-13,31,-36,-37,-44,-39,-40,-41,-30,31,31,31,31,31,31,31,31,31,-6,31,-45,31,-32,49,49,49,49,49,31,-31,]),'Not':([9,10,11,12,13,14,15,16,17,18,20,23,30,31,34,36,37,41,42,48,49,50,51,52,53,55,67,69,78,79,80,81,82,83,84,85,86,87,88,90,96,97,111,113,],[-22,36,-21,-23,-24,-25,-4,-5,-26,-27,36,36,-53,-54,36,-55,-28,36,36,36,36,36,36,36,36,-29,-13,36,-30,36,36,36,36,36,36,36,36,36,-6,36,36,-32,36,-31,]),'Else':([11,17,18,37,55,78,97,113,],[-21,-26,-27,-28,-29,-30,111,-31,]),'Equal':([21,27,47,66,],[41,-33,69,90,]),'Times':([21,27,29,32,33,35,39,40,54,63,70,71,72,75,76,77,94,],[-52,-33,51,-38,-42,-51,-33,-52,-43,-50,51,51,-44,-39,-40,-41,-45,]),'Div':([21,27,29,32,33,35,39,40,54,63,70,71,72,75,76,77,94,],[-52,-33,52,-38,-42,-51,-33,-52,-43,-50,52,52,-44,-39,-40,-41,-45,]),'Mod':([21,27,29,32,33,35,39,40,54,63,70,71,72,75,76,77,94,],[-52,-33,53,-38,-42,-51,-33,-52,-43,-50,53,53,-44,-39,-40,-41,-45,]),'Comma':([26,29,32,33,35,39,40,45,46,47,54,63,64,65,70,71,72,74,75,76,77,91,92,93,94,106,107,108,109,110,],[-34,-35,-38,-42,-51,-33,-52,68,-14,-17,-43,-50,89,-7,-36,-37,-44,96,-39,-40,-41,-15,-16,-18,-45,-8,-10,-11,-12,96,]),'Less':([29,32,33,35,39,40,54,61,62,63,70,71,72,75,76,77,94,100,101,102,103,104,105,],[-35,-38,-42,-51,-33,-52,-43,84,-64,-50,-36,-37,-44,-39,-40,-41,-45,84,84,-65,-66,-67,-68,]),'More':([29,32,33,35,39,40,54,61,62,63,70,71,72,75,76,77,94,100,101,102,103,104,105,],[-35,-38,-42,-51,-33,-52,-43,85,-64,-50,-36,-37,-44,-39,-40,-41,-45,85,85,-65,-66,-67,-68,]),'Leq':([29,32,33,35,39,40,54,61,62,63,70,71,72,75,76,77,94,100,101,102,103,104,105,],[-35,-38,-42,-51,-33,-52,-43,86,-64,-50,-36,-37,-44,-39,-40,-41,-45,86,86,-65,-66,-67,-68,]),'Geq':([29,32,33,35,39,40,54,61,62,63,70,71,72,75,76,77,94,100,101,102,103,104,105,],[-35,-38,-42,-51,-33,-52,-43,87,-64,-50,-36,-37,-44,-39,-40,-41,-45,87,87,-65,-66,-67,-68,]),'Deq':([29,32,33,35,39,40,54,60,61,62,63,70,71,72,75,76,77,94,99,100,101,102,103,104,105,],[-35,-38,-42,-51,-33,-52,-43,82,-61,-64,-50,-36,-37,-44,-39,-40,-41,-45,82,-62,-63,-65,-66,-67,-68,]),'Neq':([29,32,33,35,39,40,54,60,61,62,63,70,71,72,75,76,77,94,99,100,101,102,103,104,105,],[-35,-38,-42,-51,-33,-52,-43,83,-61,-64,-50,-36,-37,-44,-39,-40,-41,-45,83,-62,-63,-65,-66,-67,-68,]),'And':([29,32,33,35,39,40,54,59,60,61,62,63,70,71,72,75,76,77,94,98,99,100,101,102,103,104,105,],[-35,-38,-42,-51,-33,-52,-43,81,-59,-61,-64,-50,-36,-37,-44,-39,-40,-41,-45,81,-60,-62,-63,-65,-66,-67,-68,]),'Or':([29,32,33,35,39,40,54,58,59,60,61,62,63,70,71,72,75,76,77,94,98,99,100,101,102,103,104,105,],[-35,-38,-42,-51,-33,-52,-43,80,-57,-59,-61,-64,-50,-36,-37,-44,-39,-40,-41,-45,-58,-60,-62,-63,-65,-66,-67,-68,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'CompUnit':([0,],[1,]),'FuncDef':([0,],[2,]),'FuncType':([0,],[3,]),'Block':([7,10,79,111,],[8,18,18,18,]),'BlockItems':([9,],[10,]),'BlockItem':([10,],[12,]),'Decl':([10,],[13,]),'Stmt':([10,79,111,],[14,97,113,]),'ConstDecl':([10,],[15,]),'VarDecl':([10,],[16,]),'Exp':([10,20,23,41,50,69,79,96,111,],[19,38,43,56,74,93,19,110,19,]),'LVal':([10,20,23,34,41,42,48,49,50,51,52,53,69,79,80,81,82,83,84,85,86,87,90,96,111,],[21,40,40,40,40,40,40,40,40,40,40,40,40,21,40,40,40,40,40,40,40,40,40,40,21,]),'BType':([10,24,],[25,44,]),'AddExp':([10,20,23,41,42,50,69,79,80,81,82,83,84,85,86,87,90,96,111,],[26,26,26,26,62,26,26,26,62,62,62,62,102,103,104,105,109,26,26,]),'MulExp':([10,20,23,41,42,48,49,50,69,79,80,81,82,83,84,85,86,87,90,96,111,],[29,29,29,29,29,70,71,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'UnaryExp':([10,20,23,34,41,42,48,49,50,51,52,53,69,79,80,81,82,83,84,85,86,87,90,96,111,],[32,32,32,54,32,32,32,32,32,75,76,77,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'PrimaryExp':([10,20,23,34,41,42,48,49,50,51,52,53,69,79,80,81,82,83,84,85,86,87,90,96,111,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'UnaryOp':([10,20,23,34,41,42,48,49,50,51,52,53,69,79,80,81,82,83,84,85,86,87,90,96,111,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'VarDefs':([25,],[45,]),'VarDef':([25,68,],[46,91,]),'Cond':([42,],[57,]),'LOrExp':([42,],[58,]),'LAndExp':([42,80,],[59,98,]),'EqExp':([42,80,81,],[60,60,99,]),'RelExp':([42,80,81,82,83,],[61,61,61,100,101,]),'ConstDefs':([44,],[64,]),'ConstDef':([44,89,],[65,106,]),'FuncRParams':([50,],[73,]),'InitVal':([69,],[92,]),'Exps':([74,110,],[95,112,]),'ConstInitVal':([90,],[107,]),'ConstExp':([90,],[108,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> CompUnit","S'",1,None,None,None),
  ('CompUnit -> FuncDef','CompUnit',1,'p_CompUnit','analyze.py',8),
  ('Decls -> Decl Decls','Decls',2,'p_Decls','analyze.py',17),
  ('Decls -> <empty>','Decls',0,'p_Decls','analyze.py',18),
  ('Decl -> ConstDecl','Decl',1,'p_Decl','analyze.py',31),
  ('Decl -> VarDecl','Decl',1,'p_Decl','analyze.py',32),
  ('ConstDecl -> Const BType ConstDefs Semicolon','ConstDecl',4,'p_ConstDecl','analyze.py',38),
  ('ConstDefs -> ConstDef','ConstDefs',1,'p_ConstDefs','analyze.py',44),
  ('ConstDefs -> ConstDefs Comma ConstDef','ConstDefs',3,'p_ConstDefs','analyze.py',45),
  ('BType -> Int','BType',1,'p_BType','analyze.py',54),
  ('ConstDef -> Ident Equal ConstInitVal','ConstDef',3,'p_ConstDef','analyze.py',61),
  ('ConstInitVal -> ConstExp','ConstInitVal',1,'p_ConstInitVal','analyze.py',68),
  ('ConstExp -> AddExp','ConstExp',1,'p_ConstExp','analyze.py',74),
  ('VarDecl -> BType VarDefs Semicolon','VarDecl',3,'p_VarDecl','analyze.py',80),
  ('VarDefs -> VarDef','VarDefs',1,'p_Vardefs','analyze.py',86),
  ('VarDefs -> VarDefs Comma VarDef','VarDefs',3,'p_Vardefs','analyze.py',87),
  ('VarDef -> Ident Equal InitVal','VarDef',3,'p_VarDef','analyze.py',96),
  ('VarDef -> Ident','VarDef',1,'p_VarDef','analyze.py',97),
  ('InitVal -> Exp','InitVal',1,'p_InitVal','analyze.py',108),
  ('FuncDef -> FuncType Main LPar RPar Block','FuncDef',5,'p_Funcdef','analyze.py',114),
  ('FuncType -> Int','FuncType',1,'p_FuncType','analyze.py',123),
  ('Block -> LBrace BlockItems RBrace','Block',3,'p_Block','analyze.py',129),
  ('BlockItems -> <empty>','BlockItems',0,'p_BlockItems','analyze.py',135),
  ('BlockItems -> BlockItems BlockItem','BlockItems',2,'p_BlockItems','analyze.py',136),
  ('BlockItem -> Decl','BlockItem',1,'p_BlockItem','analyze.py',148),
  ('BlockItem -> Stmt','BlockItem',1,'p_BlockItem','analyze.py',149),
  ('Stmt -> Semicolon','Stmt',1,'p_Stmt','analyze.py',156),
  ('Stmt -> Block','Stmt',1,'p_Stmt','analyze.py',157),
  ('Stmt -> Exp Semicolon','Stmt',2,'p_Stmt','analyze.py',158),
  ('Stmt -> Return Exp Semicolon','Stmt',3,'p_Stmt','analyze.py',159),
  ('Stmt -> LVal Equal Exp Semicolon','Stmt',4,'p_Stmt','analyze.py',160),
  ('Stmt -> If LPar Cond RPar Stmt Else Stmt','Stmt',7,'p_Stmt','analyze.py',161),
  ('Stmt -> If LPar Cond RPar Stmt','Stmt',5,'p_Stmt','analyze.py',162),
  ('LVal -> Ident','LVal',1,'p_LVal','analyze.py',187),
  ('Exp -> AddExp','Exp',1,'p_Exp','analyze.py',193),
  ('AddExp -> MulExp','AddExp',1,'p_Addexp','analyze.py',199),
  ('AddExp -> AddExp Plus MulExp','AddExp',3,'p_Addexp','analyze.py',200),
  ('AddExp -> AddExp Minus MulExp','AddExp',3,'p_Addexp','analyze.py',201),
  ('MulExp -> UnaryExp','MulExp',1,'p_MulExp','analyze.py',212),
  ('MulExp -> MulExp Times UnaryExp','MulExp',3,'p_MulExp','analyze.py',213),
  ('MulExp -> MulExp Div UnaryExp','MulExp',3,'p_MulExp','analyze.py',214),
  ('MulExp -> MulExp Mod UnaryExp','MulExp',3,'p_MulExp','analyze.py',215),
  ('UnaryExp -> PrimaryExp','UnaryExp',1,'p_UnaryExp','analyze.py',225),
  ('UnaryExp -> UnaryOp UnaryExp','UnaryExp',2,'p_UnaryExp','analyze.py',226),
  ('UnaryExp -> Ident LPar RPar','UnaryExp',3,'p_UnaryExp','analyze.py',227),
  ('UnaryExp -> Ident LPar FuncRParams RPar','UnaryExp',4,'p_UnaryExp','analyze.py',228),
  ('FuncRParams -> Exp','FuncRParams',1,'p_FuncRParams','analyze.py',241),
  ('FuncRParams -> Exp Exps','FuncRParams',2,'p_FuncRParams','analyze.py',242),
  ('Exps -> Comma Exp','Exps',2,'p_Exps','analyze.py',251),
  ('Exps -> Comma Exp Exps','Exps',3,'p_Exps','analyze.py',252),
  ('PrimaryExp -> LPar Exp RPar','PrimaryExp',3,'p_PrimaryExp','analyze.py',261),
  ('PrimaryExp -> Number','PrimaryExp',1,'p_PrimaryExp','analyze.py',262),
  ('PrimaryExp -> LVal','PrimaryExp',1,'p_PrimaryExp','analyze.py',263),
  ('UnaryOp -> Plus','UnaryOp',1,'p_UnaryOp','analyze.py',277),
  ('UnaryOp -> Minus','UnaryOp',1,'p_UnaryOp','analyze.py',278),
  ('UnaryOp -> Not','UnaryOp',1,'p_UnaryOp','analyze.py',279),
  ('Cond -> LOrExp','Cond',1,'p_Cond','analyze.py',285),
  ('LOrExp -> LAndExp','LOrExp',1,'p_LOrExp','analyze.py',291),
  ('LOrExp -> LOrExp Or LAndExp','LOrExp',3,'p_LOrExp','analyze.py',292),
  ('LAndExp -> EqExp','LAndExp',1,'p_LAndExp','analyze.py',301),
  ('LAndExp -> LAndExp And EqExp','LAndExp',3,'p_LAndExp','analyze.py',302),
  ('EqExp -> RelExp','EqExp',1,'p_EqExp','analyze.py',311),
  ('EqExp -> EqExp Deq RelExp','EqExp',3,'p_EqExp','analyze.py',312),
  ('EqExp -> EqExp Neq RelExp','EqExp',3,'p_EqExp','analyze.py',313),
  ('RelExp -> AddExp','RelExp',1,'p_RelExp','analyze.py',323),
  ('RelExp -> RelExp Less AddExp','RelExp',3,'p_RelExp','analyze.py',324),
  ('RelExp -> RelExp More AddExp','RelExp',3,'p_RelExp','analyze.py',325),
  ('RelExp -> RelExp Leq AddExp','RelExp',3,'p_RelExp','analyze.py',326),
  ('RelExp -> RelExp Geq AddExp','RelExp',3,'p_RelExp','analyze.py',327),
]
