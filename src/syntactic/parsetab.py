
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'CompUnitComma Const Div Equal Ident Int LBrace LPar Main Minus Mod Number Plus RBrace RPar Return Semicolon Times\n\tCompUnit : FuncDef\n\t\n\tDecl : ConstDecl\n\t\t | VarDecl\n\t\n\tConstDecl : Const BType ConstDefs Semicolon\n\t\n\tConstDefs : ConstDef\n\t\t\t  | ConstDefs Comma ConstDef\n\t\n\tBType : Int\n\t\n\tConstDef : Ident Equal ConstInitVal\n\t\n\tConstInitVal : ConstExp\n\t\n\tConstExp : AddExp\n\t\n\tVarDecl : BType VarDefs Semicolon\n\t\n\tVarDefs : VarDef\n\t\t\t| VarDefs Comma VarDef\n\t\n\tVarDef : Ident Equal InitVal\n           | Ident\n\t\n\tInitVal : Exp\n\t\n\tFuncDef : FuncType Main LPar RPar Block\n\t\n\tFuncType : Int\n\t\n\tBlock : LBrace BlockItems RBrace\n\t\n\tBlockItems :\n\t\t\t   | BlockItems BlockItem\n\t\n\tBlockItem : Decl\n\t\t\t  | Stmt\n\t\n\tStmt : Semicolon\n\t\t | Exp Semicolon\n\t\t | Return Exp Semicolon\n\t\t | LVal Equal Exp Semicolon\n\t\n\tLVal : Ident\n\t\n\tExp : AddExp\n\t\n\tAddExp : MulExp \n           | AddExp Plus MulExp\n\t\t   | AddExp Minus MulExp\n\t\n\tMulExp : UnaryExp\n           | MulExp Times UnaryExp\n\t\t   | MulExp Div UnaryExp\n\t\t   | MulExp Mod UnaryExp\n\t\n\tUnaryExp : PrimaryExp\n\t\t\t | UnaryOp UnaryExp\n\t\t\t | Ident LPar RPar\n\t\t\t | Ident LPar FuncRParams RPar\n\t\n\tFuncRParams : Exp Exps\n\t\n\tExps : Comma Exp\n\t\t | Comma Exp Exps\n\t\n\tPrimaryExp : LPar Exp RPar\n\t\t\t   | Number\n\t\t\t   | LVal\n\t\n\tUnaryOp : Plus\n\t\t\t| Minus\n\t'
    
_lr_action_items = {'Int':([0,9,10,12,13,14,15,16,17,21,34,51,56,68,69,],[4,-20,25,-21,-22,-23,-2,-3,-24,25,-25,-26,-11,-27,-4,]),'$end':([1,2,8,11,],[0,-1,-17,-19,]),'Main':([3,4,],[5,-18,]),'LPar':([5,9,10,12,13,14,15,16,17,19,24,27,28,31,32,34,36,38,43,44,45,46,47,48,51,56,58,68,69,71,77,],[6,-20,32,-21,-22,-23,-2,-3,-24,32,45,-47,-48,32,32,-25,45,32,32,32,32,32,32,32,-26,-11,32,-27,-4,32,32,]),'RPar':([6,23,26,29,30,33,36,37,45,49,50,59,60,61,62,64,65,66,67,75,76,82,83,],[7,-29,-30,-33,-37,-45,-28,-46,61,-38,67,-31,-32,-39,75,-34,-35,-36,-44,-40,-41,-42,-43,]),'LBrace':([7,],[9,]),'RBrace':([9,10,12,13,14,15,16,17,34,51,56,68,69,],[-20,11,-21,-22,-23,-2,-3,-24,-25,-26,-11,-27,-4,]),'Semicolon':([9,10,12,13,14,15,16,17,18,20,23,24,26,29,30,33,34,35,36,37,40,41,42,49,51,52,53,54,56,59,60,61,64,65,66,67,68,69,72,73,74,75,78,79,80,81,],[-20,17,-21,-22,-23,-2,-3,-24,34,-46,-29,-28,-30,-33,-37,-45,-25,51,-28,-46,56,-12,-15,-38,-26,68,69,-5,-11,-31,-32,-39,-34,-35,-36,-44,-27,-4,-13,-14,-16,-40,-6,-8,-9,-10,]),'Return':([9,10,12,13,14,15,16,17,34,51,56,68,69,],[-20,19,-21,-22,-23,-2,-3,-24,-25,-26,-11,-27,-4,]),'Const':([9,10,12,13,14,15,16,17,34,51,56,68,69,],[-20,21,-21,-22,-23,-2,-3,-24,-25,-26,-11,-27,-4,]),'Ident':([9,10,12,13,14,15,16,17,19,22,25,27,28,31,32,34,38,39,43,44,45,46,47,48,51,56,57,58,68,69,70,71,77,],[-20,24,-21,-22,-23,-2,-3,-24,36,42,-7,-47,-48,36,36,-25,36,55,36,36,36,36,36,36,-26,-11,42,36,-27,-4,55,36,36,]),'Number':([9,10,12,13,14,15,16,17,19,27,28,31,32,34,38,43,44,45,46,47,48,51,56,58,68,69,71,77,],[-20,33,-21,-22,-23,-2,-3,-24,33,-47,-48,33,33,-25,33,33,33,33,33,33,33,-26,-11,33,-27,-4,33,33,]),'Plus':([9,10,12,13,14,15,16,17,19,20,23,24,26,27,28,29,30,31,32,33,34,36,37,38,43,44,45,46,47,48,49,51,56,58,59,60,61,64,65,66,67,68,69,71,75,77,81,],[-20,27,-21,-22,-23,-2,-3,-24,27,-46,43,-28,-30,-47,-48,-33,-37,27,27,-45,-25,-28,-46,27,27,27,27,27,27,27,-38,-26,-11,27,-31,-32,-39,-34,-35,-36,-44,-27,-4,27,-40,27,43,]),'Minus':([9,10,12,13,14,15,16,17,19,20,23,24,26,27,28,29,30,31,32,33,34,36,37,38,43,44,45,46,47,48,49,51,56,58,59,60,61,64,65,66,67,68,69,71,75,77,81,],[-20,28,-21,-22,-23,-2,-3,-24,28,-46,44,-28,-30,-47,-48,-33,-37,28,28,-45,-25,-28,-46,28,28,28,28,28,28,28,-38,-26,-11,28,-31,-32,-39,-34,-35,-36,-44,-27,-4,28,-40,28,44,]),'Equal':([20,24,42,55,],[38,-28,58,71,]),'Times':([20,24,26,29,30,33,36,37,49,59,60,61,64,65,66,67,75,],[-46,-28,46,-33,-37,-45,-28,-46,-38,46,46,-39,-34,-35,-36,-44,-40,]),'Div':([20,24,26,29,30,33,36,37,49,59,60,61,64,65,66,67,75,],[-46,-28,47,-33,-37,-45,-28,-46,-38,47,47,-39,-34,-35,-36,-44,-40,]),'Mod':([20,24,26,29,30,33,36,37,49,59,60,61,64,65,66,67,75,],[-46,-28,48,-33,-37,-45,-28,-46,-38,48,48,-39,-34,-35,-36,-44,-40,]),'Comma':([23,26,29,30,33,36,37,40,41,42,49,53,54,59,60,61,63,64,65,66,67,72,73,74,75,78,79,80,81,82,],[-29,-30,-33,-37,-45,-28,-46,57,-12,-15,-38,70,-5,-31,-32,-39,77,-34,-35,-36,-44,-13,-14,-16,-40,-6,-8,-9,-10,77,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'CompUnit':([0,],[1,]),'FuncDef':([0,],[2,]),'FuncType':([0,],[3,]),'Block':([7,],[8,]),'BlockItems':([9,],[10,]),'BlockItem':([10,],[12,]),'Decl':([10,],[13,]),'Stmt':([10,],[14,]),'ConstDecl':([10,],[15,]),'VarDecl':([10,],[16,]),'Exp':([10,19,32,38,45,58,77,],[18,35,50,52,63,74,82,]),'LVal':([10,19,31,32,38,43,44,45,46,47,48,58,71,77,],[20,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'BType':([10,21,],[22,39,]),'AddExp':([10,19,32,38,45,58,71,77,],[23,23,23,23,23,23,81,23,]),'MulExp':([10,19,32,38,43,44,45,58,71,77,],[26,26,26,26,59,60,26,26,26,26,]),'UnaryExp':([10,19,31,32,38,43,44,45,46,47,48,58,71,77,],[29,29,49,29,29,29,29,29,64,65,66,29,29,29,]),'PrimaryExp':([10,19,31,32,38,43,44,45,46,47,48,58,71,77,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'UnaryOp':([10,19,31,32,38,43,44,45,46,47,48,58,71,77,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'VarDefs':([22,],[40,]),'VarDef':([22,57,],[41,72,]),'ConstDefs':([39,],[53,]),'ConstDef':([39,70,],[54,78,]),'FuncRParams':([45,],[62,]),'InitVal':([58,],[73,]),'Exps':([63,82,],[76,83,]),'ConstInitVal':([71,],[79,]),'ConstExp':([71,],[80,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> CompUnit","S'",1,None,None,None),
  ('CompUnit -> FuncDef','CompUnit',1,'p_CompUnit','analyze.py',9),
  ('Decl -> ConstDecl','Decl',1,'p_Decl','analyze.py',15),
  ('Decl -> VarDecl','Decl',1,'p_Decl','analyze.py',16),
  ('ConstDecl -> Const BType ConstDefs Semicolon','ConstDecl',4,'p_ConstDecl','analyze.py',22),
  ('ConstDefs -> ConstDef','ConstDefs',1,'p_ConstDefs','analyze.py',30),
  ('ConstDefs -> ConstDefs Comma ConstDef','ConstDefs',3,'p_ConstDefs','analyze.py',31),
  ('BType -> Int','BType',1,'p_BType','analyze.py',40),
  ('ConstDef -> Ident Equal ConstInitVal','ConstDef',3,'p_ConstDef','analyze.py',47),
  ('ConstInitVal -> ConstExp','ConstInitVal',1,'p_ConstInitVal','analyze.py',54),
  ('ConstExp -> AddExp','ConstExp',1,'p_ConstExp','analyze.py',60),
  ('VarDecl -> BType VarDefs Semicolon','VarDecl',3,'p_VarDecl','analyze.py',66),
  ('VarDefs -> VarDef','VarDefs',1,'p_Vardefs','analyze.py',73),
  ('VarDefs -> VarDefs Comma VarDef','VarDefs',3,'p_Vardefs','analyze.py',74),
  ('VarDef -> Ident Equal InitVal','VarDef',3,'p_VarDef','analyze.py',86),
  ('VarDef -> Ident','VarDef',1,'p_VarDef','analyze.py',87),
  ('InitVal -> Exp','InitVal',1,'p_InitVal','analyze.py',97),
  ('FuncDef -> FuncType Main LPar RPar Block','FuncDef',5,'p_Funcdef','analyze.py',103),
  ('FuncType -> Int','FuncType',1,'p_FuncType','analyze.py',111),
  ('Block -> LBrace BlockItems RBrace','Block',3,'p_Block','analyze.py',117),
  ('BlockItems -> <empty>','BlockItems',0,'p_BlockItems','analyze.py',125),
  ('BlockItems -> BlockItems BlockItem','BlockItems',2,'p_BlockItems','analyze.py',126),
  ('BlockItem -> Decl','BlockItem',1,'p_BlockItem','analyze.py',138),
  ('BlockItem -> Stmt','BlockItem',1,'p_BlockItem','analyze.py',139),
  ('Stmt -> Semicolon','Stmt',1,'p_Stmt','analyze.py',145),
  ('Stmt -> Exp Semicolon','Stmt',2,'p_Stmt','analyze.py',146),
  ('Stmt -> Return Exp Semicolon','Stmt',3,'p_Stmt','analyze.py',147),
  ('Stmt -> LVal Equal Exp Semicolon','Stmt',4,'p_Stmt','analyze.py',148),
  ('LVal -> Ident','LVal',1,'p_LVal','analyze.py',166),
  ('Exp -> AddExp','Exp',1,'p_Exp','analyze.py',172),
  ('AddExp -> MulExp','AddExp',1,'p_Addexp','analyze.py',178),
  ('AddExp -> AddExp Plus MulExp','AddExp',3,'p_Addexp','analyze.py',179),
  ('AddExp -> AddExp Minus MulExp','AddExp',3,'p_Addexp','analyze.py',180),
  ('MulExp -> UnaryExp','MulExp',1,'p_MulExp','analyze.py',191),
  ('MulExp -> MulExp Times UnaryExp','MulExp',3,'p_MulExp','analyze.py',192),
  ('MulExp -> MulExp Div UnaryExp','MulExp',3,'p_MulExp','analyze.py',193),
  ('MulExp -> MulExp Mod UnaryExp','MulExp',3,'p_MulExp','analyze.py',194),
  ('UnaryExp -> PrimaryExp','UnaryExp',1,'p_UnaryExp','analyze.py',204),
  ('UnaryExp -> UnaryOp UnaryExp','UnaryExp',2,'p_UnaryExp','analyze.py',205),
  ('UnaryExp -> Ident LPar RPar','UnaryExp',3,'p_UnaryExp','analyze.py',206),
  ('UnaryExp -> Ident LPar FuncRParams RPar','UnaryExp',4,'p_UnaryExp','analyze.py',207),
  ('FuncRParams -> Exp Exps','FuncRParams',2,'p_FuncRParams','analyze.py',224),
  ('Exps -> Comma Exp','Exps',2,'p_Exps','analyze.py',230),
  ('Exps -> Comma Exp Exps','Exps',3,'p_Exps','analyze.py',231),
  ('PrimaryExp -> LPar Exp RPar','PrimaryExp',3,'p_PrimaryExp','analyze.py',240),
  ('PrimaryExp -> Number','PrimaryExp',1,'p_PrimaryExp','analyze.py',241),
  ('PrimaryExp -> LVal','PrimaryExp',1,'p_PrimaryExp','analyze.py',242),
  ('UnaryOp -> Plus','UnaryOp',1,'p_UnaryOp','analyze.py',257),
  ('UnaryOp -> Minus','UnaryOp',1,'p_UnaryOp','analyze.py',258),
]
