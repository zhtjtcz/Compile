
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'CompUnitAnd Break Comma Const Continue Deq Div Else Equal Geq Ident If Int LBrace LPar LSPar Leq Less Minus Mod More Neq Not Number Or Plus RBrace RPar RSPar Return Semicolon Times Void While\n\tCompUnit : Definelist\n\t\n\tDefinelist : Definelist Define\n\t\t\t   | Define\n\t\n\tDefine : Decl\n\t\t   | FuncDef\n\t\n\tDecl : ConstDecl\n\t\t | VarDecl\n\t\n\tConstDecl : Const BType ConstDefs Semicolon\n\t\n\tConstDefs : ConstDef\n\t\t\t  | ConstDefs Comma ConstDef\n\t\n\tBType : Int\n\t\t  | Void\n\t\n\tConstDef : Ident Equal ConstInitVal\n\t\t\t | Ident ConstSubs Equal ConstInitVals\n\t\n\tConstSubs : ConstSub ConstSubs\n\t\t\t  | ConstSub\n\t\n\tConstSub : LSPar ConstExp RSPar\n\t\n\tConstInitVal : ConstExp\n\t\t\t\t | LBrace RBrace\n\t\t\t\t | LBrace ConstInitVals RBrace\n\t\n\tConstInitVals : ConstInitVal\n\t\t\t\t  | ConstInitVal Comma ConstInitVals\n\t\n\tConstExp : AddExp\n\t\n\tVarDecl : BType VarDefs Semicolon\n\t\n\tVarDefs : VarDef\n\t\t\t| VarDefs Comma VarDef\n\t\n\tVarDef : Ident\n\t\t   | Ident ConstSubs\n           | Ident Equal InitVal\n\t\t   | Ident ConstSubs Equal InitVals\n\t\n\tInitVals : InitVal\n\t\t\t | InitVal Comma InitVals\n\t\n\tInitVal : Exp\n\t\t\t| LBrace RBrace\n\t\t\t| LBrace InitVals RBrace\n\t\n\tFuncDef : BType Ident LPar RPar Block\n\t        | BType Ident LPar FuncFParams RPar Block\n\t\n\tFuncFParams : FuncFParam\n\t\t\t\t| FuncFParam Comma FuncFParams\n\t\n\tFuncFParam : BType Ident\n\t\t\t   | BType Ident LSPar RSPar\n\t\t\t   | BType Ident LSPar RSPar ParParams\n\t\n\tParParams : LSPar Exp RSPar\n\t\t\t  | LSPar Exp RSPar ParParams\n\t\n\tBlock : LBrace BlockItems RBrace\n\t\n\tBlockItems :\n\t\t\t   | BlockItems BlockItem\n\t\n\tBlockItem : Decl\n\t\t\t  | Stmt\n\t\n\tStmt : Semicolon\n\t\t | Block\n\t\t | Break\n\t\t | Continue\n\t\t | Exp Semicolon\n\t\t | Return Semicolon\n\t\t | Return Exp Semicolon\n\t\t | LVal Equal Exp Semicolon\n\t\t | While LPar Cond RPar Stmt\n\t\t | If LPar Cond RPar Stmt Else Stmt\n\t\t | If LPar Cond RPar Stmt\n\t\n\tLVal : Ident ConstSubs\n\t\t | Ident\n\t\n\tExp : AddExp\n\t\n\tAddExp : MulExp \n           | AddExp Plus MulExp\n\t\t   | AddExp Minus MulExp\n\t\n\tMulExp : UnaryExp\n           | MulExp Times UnaryExp\n\t\t   | MulExp Div UnaryExp\n\t\t   | MulExp Mod UnaryExp\n\t\n\tUnaryExp : PrimaryExp\n\t\t\t | UnaryOp UnaryExp\n\t\t\t | Ident LPar RPar\n\t\t\t | Ident LPar FuncRParams RPar\n\t\n\tFuncRParams : Exp\n\t\t\t\t| Exp Exps\n\t\n\tExps : Comma Exp\n\t\t | Comma Exp Exps\n\t\n\tPrimaryExp : LPar Exp RPar\n\t\t\t   | Number\n\t\t\t   | LVal\n\t\n\tUnaryOp : Plus\n\t\t\t| Minus\n\t\t\t| Not\n\t\n\tCond : LOrExp\n\t\n\tLOrExp : LAndExp\n           | LOrExp Or LAndExp\n\t\n\tLAndExp : EqExp\n            | LAndExp And EqExp\n\t\n\tEqExp : RelExp\n    \t  | EqExp Deq RelExp\n\t\t  | EqExp Neq RelExp\n\t\n\tRelExp : AddExp\n    \t   | RelExp Less AddExp\n\t\t   | RelExp More AddExp\n\t\t   | RelExp Leq AddExp\n\t\t   | RelExp Geq AddExp\n\t'
    
_lr_action_items = {'Const':([0,2,3,4,5,6,7,12,22,52,57,58,81,82,100,101,102,103,104,105,106,107,123,124,132,143,155,164,166,],[9,9,-3,-4,-5,-6,-7,-2,-24,-8,-36,-46,9,-37,-45,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-60,-59,]),'Int':([0,2,3,4,5,6,7,9,12,17,22,52,57,58,60,81,82,100,101,102,103,104,105,106,107,123,124,132,143,155,164,166,],[10,10,-3,-4,-5,-6,-7,10,-2,10,-24,-8,-36,-46,10,10,-37,-45,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-60,-59,]),'Void':([0,2,3,4,5,6,7,9,12,17,22,52,57,58,60,81,82,100,101,102,103,104,105,106,107,123,124,132,143,155,164,166,],[11,11,-3,-4,-5,-6,-7,11,-2,11,-24,-8,-36,-46,11,11,-37,-45,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-60,-59,]),'$end':([1,2,3,4,5,6,7,12,22,52,57,82,100,],[0,-1,-3,-4,-5,-6,-7,-2,-24,-8,-36,-37,-45,]),'RBrace':([6,7,20,22,32,34,35,36,37,40,41,44,45,47,49,52,58,62,64,65,66,72,74,77,78,81,85,88,89,90,91,92,93,94,95,96,97,100,101,102,103,104,105,106,107,115,116,119,123,124,130,132,143,155,164,166,],[-6,-7,-16,-24,-62,-33,65,-63,-64,-67,-71,-80,-81,-15,-23,-8,-46,-31,-61,-34,88,-72,-17,-18,95,100,-73,-35,-65,-66,-68,-69,-70,-79,-19,119,-21,-45,-47,-48,-49,-50,-51,-52,-53,-32,-74,-20,-54,-55,-22,-56,-57,-58,-60,-59,]),'Semicolon':([6,7,13,14,15,18,20,22,24,25,32,33,34,36,37,40,41,44,45,47,49,50,51,52,58,61,62,64,65,72,74,75,76,77,81,85,88,89,90,91,92,93,94,95,97,98,100,101,102,103,104,105,106,107,108,109,110,114,115,116,119,123,124,125,130,132,133,143,144,153,155,164,165,166,],[-6,-7,-27,22,-25,-28,-16,-24,52,-9,-62,-29,-33,-63,-64,-67,-71,-80,-81,-15,-23,-26,-27,-8,-46,-30,-31,-61,-34,-72,-17,-10,-13,-18,104,-73,-35,-65,-66,-68,-69,-70,-79,-19,-21,-14,-45,-47,-48,-49,-50,-51,-52,-53,123,124,-81,-62,-32,-74,-20,-54,-55,132,-22,-56,143,-57,104,104,-58,-60,104,-59,]),'Break':([6,7,22,52,58,81,100,101,102,103,104,105,106,107,123,124,132,143,144,153,155,164,165,166,],[-6,-7,-24,-8,-46,106,-45,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,106,106,-58,-60,106,-59,]),'Continue':([6,7,22,52,58,81,100,101,102,103,104,105,106,107,123,124,132,143,144,153,155,164,165,166,],[-6,-7,-24,-8,-46,107,-45,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,107,107,-58,-60,107,-59,]),'Return':([6,7,22,52,58,81,100,101,102,103,104,105,106,107,123,124,132,143,144,153,155,164,165,166,],[-6,-7,-24,-8,-46,109,-45,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,109,109,-58,-60,109,-59,]),'While':([6,7,22,52,58,81,100,101,102,103,104,105,106,107,123,124,132,143,144,153,155,164,165,166,],[-6,-7,-24,-8,-46,111,-45,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,111,111,-58,-60,111,-59,]),'If':([6,7,22,52,58,81,100,101,102,103,104,105,106,107,123,124,132,143,144,153,155,164,165,166,],[-6,-7,-24,-8,-46,112,-45,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,112,112,-58,-60,112,-59,]),'LBrace':([6,7,19,22,28,31,35,52,54,58,59,78,79,81,84,100,101,102,103,104,105,106,107,120,123,124,132,143,144,153,155,164,165,166,],[-6,-7,35,-24,58,35,35,-8,78,-46,58,78,78,58,35,-45,-47,-48,-49,-50,-51,-52,-53,78,-54,-55,-56,-57,58,58,-58,-60,58,-59,]),'Ident':([6,7,8,10,11,16,19,21,22,23,27,31,35,38,39,42,43,46,52,53,54,58,63,67,68,69,70,71,78,79,81,84,100,101,102,103,104,105,106,107,109,113,118,120,121,123,124,126,127,128,132,143,144,145,146,147,148,149,150,151,152,153,155,164,165,166,],[-6,-7,13,-11,-12,26,32,32,-24,51,56,32,32,-82,-83,32,32,-84,-8,26,32,-46,32,32,32,32,32,32,32,32,114,32,-45,-47,-48,-49,-50,-51,-52,-53,32,51,32,32,32,-54,-55,32,32,32,-56,-57,114,32,32,32,32,32,32,32,32,114,-58,-60,114,-59,]),'LPar':([6,7,13,19,21,22,31,32,35,38,39,42,43,46,52,54,58,63,67,68,69,70,71,78,79,81,84,100,101,102,103,104,105,106,107,109,111,112,114,118,120,121,123,124,126,127,128,132,143,144,145,146,147,148,149,150,151,152,153,155,164,165,166,],[-6,-7,17,43,43,-24,43,63,43,-82,-83,43,43,-84,-8,43,-46,43,43,43,43,43,43,43,43,43,43,-45,-47,-48,-49,-50,-51,-52,-53,43,127,128,63,43,43,43,-54,-55,43,43,43,-56,-57,43,43,43,43,43,43,43,43,43,43,-58,-60,43,-59,]),'Number':([6,7,19,21,22,31,35,38,39,42,43,46,52,54,58,63,67,68,69,70,71,78,79,81,84,100,101,102,103,104,105,106,107,109,118,120,121,123,124,126,127,128,132,143,144,145,146,147,148,149,150,151,152,153,155,164,165,166,],[-6,-7,44,44,-24,44,44,-82,-83,44,44,-84,-8,44,-46,44,44,44,44,44,44,44,44,44,44,-45,-47,-48,-49,-50,-51,-52,-53,44,44,44,44,-54,-55,44,44,44,-56,-57,44,44,44,44,44,44,44,44,44,44,-58,-60,44,-59,]),'Plus':([6,7,19,20,21,22,31,32,35,36,37,38,39,40,41,42,43,44,45,46,47,49,52,54,58,63,64,67,68,69,70,71,72,74,78,79,81,84,85,89,90,91,92,93,94,100,101,102,103,104,105,106,107,109,110,114,116,118,120,121,123,124,126,127,128,132,139,143,144,145,146,147,148,149,150,151,152,153,155,160,161,162,163,164,165,166,],[-6,-7,38,-16,38,-24,38,-62,38,67,-64,-82,-83,-67,-71,38,38,-80,-81,-84,-15,67,-8,38,-46,38,-61,38,38,38,38,38,-72,-17,38,38,38,38,-73,-65,-66,-68,-69,-70,-79,-45,-47,-48,-49,-50,-51,-52,-53,38,-81,-62,-74,38,38,38,-54,-55,38,38,38,-56,67,-57,38,38,38,38,38,38,38,38,38,38,-58,67,67,67,67,-60,38,-59,]),'Minus':([6,7,19,20,21,22,31,32,35,36,37,38,39,40,41,42,43,44,45,46,47,49,52,54,58,63,64,67,68,69,70,71,72,74,78,79,81,84,85,89,90,91,92,93,94,100,101,102,103,104,105,106,107,109,110,114,116,118,120,121,123,124,126,127,128,132,139,143,144,145,146,147,148,149,150,151,152,153,155,160,161,162,163,164,165,166,],[-6,-7,39,-16,39,-24,39,-62,39,68,-64,-82,-83,-67,-71,39,39,-80,-81,-84,-15,68,-8,39,-46,39,-61,39,39,39,39,39,-72,-17,39,39,39,39,-73,-65,-66,-68,-69,-70,-79,-45,-47,-48,-49,-50,-51,-52,-53,39,-81,-62,-74,39,39,39,-54,-55,39,39,39,-56,68,-57,39,39,39,39,39,39,39,39,39,39,-58,68,68,68,68,-60,39,-59,]),'Not':([6,7,19,21,22,31,35,38,39,42,43,46,52,54,58,63,67,68,69,70,71,78,79,81,84,100,101,102,103,104,105,106,107,109,118,120,121,123,124,126,127,128,132,143,144,145,146,147,148,149,150,151,152,153,155,164,165,166,],[-6,-7,46,46,-24,46,46,-82,-83,46,46,-84,-8,46,-46,46,46,46,46,46,46,46,46,46,46,-45,-47,-48,-49,-50,-51,-52,-53,46,46,46,46,-54,-55,46,46,46,-56,-57,46,46,46,46,46,46,46,46,46,46,-58,-60,46,-59,]),'Comma':([13,14,15,18,20,24,25,30,32,33,34,36,37,40,41,44,45,47,49,50,51,56,61,62,64,65,72,74,75,76,77,85,87,88,89,90,91,92,93,94,95,97,98,99,115,116,119,122,129,130,142,154,],[-27,23,-25,-28,-16,53,-9,60,-62,-29,-33,-63,-64,-67,-71,-80,-81,-15,-23,-26,-27,-40,-30,84,-61,-34,-72,-17,-10,-13,-18,-73,118,-35,-65,-66,-68,-69,-70,-79,-19,120,-14,-41,-32,-74,-20,-42,118,-22,-43,-44,]),'Equal':([13,18,20,26,47,51,55,64,74,110,114,],[19,31,-16,54,-15,19,79,-61,-17,126,-62,]),'LSPar':([13,20,26,32,51,56,74,99,114,142,],[21,21,21,21,21,80,-17,121,21,121,]),'RPar':([17,20,29,30,32,36,37,40,41,44,45,47,56,63,64,72,73,74,83,85,86,87,89,90,91,92,93,94,99,116,117,122,129,134,135,136,137,138,139,140,141,142,154,156,157,158,159,160,161,162,163,],[28,-16,59,-38,-62,-63,-64,-67,-71,-80,-81,-15,-40,85,-61,-72,94,-17,-39,-73,116,-75,-65,-66,-68,-69,-70,-79,-41,-74,-76,-42,-77,144,-85,-86,-88,-90,-93,153,-78,-43,-44,-87,-89,-91,-92,-94,-95,-96,-97,]),'Times':([20,32,37,40,41,44,45,47,64,72,74,85,89,90,91,92,93,94,110,114,116,],[-16,-62,69,-67,-71,-80,-81,-15,-61,-72,-17,-73,69,69,-68,-69,-70,-79,-81,-62,-74,]),'Div':([20,32,37,40,41,44,45,47,64,72,74,85,89,90,91,92,93,94,110,114,116,],[-16,-62,70,-67,-71,-80,-81,-15,-61,-72,-17,-73,70,70,-68,-69,-70,-79,-81,-62,-74,]),'Mod':([20,32,37,40,41,44,45,47,64,72,74,85,89,90,91,92,93,94,110,114,116,],[-16,-62,71,-67,-71,-80,-81,-15,-61,-72,-17,-73,71,71,-68,-69,-70,-79,-81,-62,-74,]),'RSPar':([20,32,36,37,40,41,44,45,47,48,49,64,72,74,80,85,89,90,91,92,93,94,116,131,],[-16,-62,-63,-64,-67,-71,-80,-81,-15,74,-23,-61,-72,-17,99,-73,-65,-66,-68,-69,-70,-79,-74,142,]),'Less':([20,32,37,40,41,44,45,47,64,72,74,85,89,90,91,92,93,94,116,138,139,158,159,160,161,162,163,],[-16,-62,-64,-67,-71,-80,-81,-15,-61,-72,-17,-73,-65,-66,-68,-69,-70,-79,-74,149,-93,149,149,-94,-95,-96,-97,]),'More':([20,32,37,40,41,44,45,47,64,72,74,85,89,90,91,92,93,94,116,138,139,158,159,160,161,162,163,],[-16,-62,-64,-67,-71,-80,-81,-15,-61,-72,-17,-73,-65,-66,-68,-69,-70,-79,-74,150,-93,150,150,-94,-95,-96,-97,]),'Leq':([20,32,37,40,41,44,45,47,64,72,74,85,89,90,91,92,93,94,116,138,139,158,159,160,161,162,163,],[-16,-62,-64,-67,-71,-80,-81,-15,-61,-72,-17,-73,-65,-66,-68,-69,-70,-79,-74,151,-93,151,151,-94,-95,-96,-97,]),'Geq':([20,32,37,40,41,44,45,47,64,72,74,85,89,90,91,92,93,94,116,138,139,158,159,160,161,162,163,],[-16,-62,-64,-67,-71,-80,-81,-15,-61,-72,-17,-73,-65,-66,-68,-69,-70,-79,-74,152,-93,152,152,-94,-95,-96,-97,]),'Deq':([20,32,37,40,41,44,45,47,64,72,74,85,89,90,91,92,93,94,116,137,138,139,157,158,159,160,161,162,163,],[-16,-62,-64,-67,-71,-80,-81,-15,-61,-72,-17,-73,-65,-66,-68,-69,-70,-79,-74,147,-90,-93,147,-91,-92,-94,-95,-96,-97,]),'Neq':([20,32,37,40,41,44,45,47,64,72,74,85,89,90,91,92,93,94,116,137,138,139,157,158,159,160,161,162,163,],[-16,-62,-64,-67,-71,-80,-81,-15,-61,-72,-17,-73,-65,-66,-68,-69,-70,-79,-74,148,-90,-93,148,-91,-92,-94,-95,-96,-97,]),'And':([20,32,37,40,41,44,45,47,64,72,74,85,89,90,91,92,93,94,116,136,137,138,139,156,157,158,159,160,161,162,163,],[-16,-62,-64,-67,-71,-80,-81,-15,-61,-72,-17,-73,-65,-66,-68,-69,-70,-79,-74,146,-88,-90,-93,146,-89,-91,-92,-94,-95,-96,-97,]),'Or':([20,32,37,40,41,44,45,47,64,72,74,85,89,90,91,92,93,94,116,135,136,137,138,139,156,157,158,159,160,161,162,163,],[-16,-62,-64,-67,-71,-80,-81,-15,-61,-72,-17,-73,-65,-66,-68,-69,-70,-79,-74,145,-86,-88,-90,-93,-87,-89,-91,-92,-94,-95,-96,-97,]),'Else':([100,104,105,106,107,123,124,132,143,155,164,166,],[-45,-50,-51,-52,-53,-54,-55,-56,-57,-58,165,-59,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'CompUnit':([0,],[1,]),'Definelist':([0,],[2,]),'Define':([0,2,],[3,12,]),'Decl':([0,2,81,],[4,4,102,]),'FuncDef':([0,2,],[5,5,]),'ConstDecl':([0,2,81,],[6,6,6,]),'VarDecl':([0,2,81,],[7,7,7,]),'BType':([0,2,9,17,60,81,],[8,8,16,27,27,113,]),'VarDefs':([8,113,],[14,14,]),'VarDef':([8,23,113,],[15,50,15,]),'ConstSubs':([13,20,26,32,51,114,],[18,47,55,64,18,64,]),'ConstSub':([13,20,26,32,51,114,],[20,20,20,20,20,20,]),'ConstDefs':([16,],[24,]),'ConstDef':([16,53,],[25,75,]),'FuncFParams':([17,60,],[29,83,]),'FuncFParam':([17,60,],[30,30,]),'InitVal':([19,31,35,84,],[33,62,62,62,]),'Exp':([19,31,35,43,63,81,84,109,118,121,126,144,153,165,],[34,34,34,73,87,108,34,125,129,131,133,108,108,108,]),'AddExp':([19,21,31,35,43,54,63,78,79,81,84,109,118,120,121,126,127,128,144,145,146,147,148,149,150,151,152,153,165,],[36,49,36,36,36,49,36,49,49,36,36,36,36,49,36,36,139,139,36,139,139,139,139,160,161,162,163,36,36,]),'MulExp':([19,21,31,35,43,54,63,67,68,78,79,81,84,109,118,120,121,126,127,128,144,145,146,147,148,149,150,151,152,153,165,],[37,37,37,37,37,37,37,89,90,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'UnaryExp':([19,21,31,35,42,43,54,63,67,68,69,70,71,78,79,81,84,109,118,120,121,126,127,128,144,145,146,147,148,149,150,151,152,153,165,],[40,40,40,40,72,40,40,40,40,40,91,92,93,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'PrimaryExp':([19,21,31,35,42,43,54,63,67,68,69,70,71,78,79,81,84,109,118,120,121,126,127,128,144,145,146,147,148,149,150,151,152,153,165,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'UnaryOp':([19,21,31,35,42,43,54,63,67,68,69,70,71,78,79,81,84,109,118,120,121,126,127,128,144,145,146,147,148,149,150,151,152,153,165,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'LVal':([19,21,31,35,42,43,54,63,67,68,69,70,71,78,79,81,84,109,118,120,121,126,127,128,144,145,146,147,148,149,150,151,152,153,165,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,110,45,45,45,45,45,45,45,45,110,45,45,45,45,45,45,45,45,110,110,]),'ConstExp':([21,54,78,79,120,],[48,77,77,77,77,]),'Block':([28,59,81,144,153,165,],[57,82,105,105,105,105,]),'InitVals':([31,35,84,],[61,66,115,]),'ConstInitVal':([54,78,79,120,],[76,97,97,97,]),'BlockItems':([58,],[81,]),'FuncRParams':([63,],[86,]),'ConstInitVals':([78,79,120,],[96,98,130,]),'BlockItem':([81,],[101,]),'Stmt':([81,144,153,165,],[103,155,164,166,]),'Exps':([87,129,],[117,141,]),'ParParams':([99,142,],[122,154,]),'Cond':([127,128,],[134,140,]),'LOrExp':([127,128,],[135,135,]),'LAndExp':([127,128,145,],[136,136,156,]),'EqExp':([127,128,145,146,],[137,137,137,157,]),'RelExp':([127,128,145,146,147,148,],[138,138,138,138,158,159,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> CompUnit","S'",1,None,None,None),
  ('CompUnit -> Definelist','CompUnit',1,'p_CompUnit','analyze.py',8),
  ('Definelist -> Definelist Define','Definelist',2,'p_Definelist','analyze.py',14),
  ('Definelist -> Define','Definelist',1,'p_Definelist','analyze.py',15),
  ('Define -> Decl','Define',1,'p_Define','analyze.py',24),
  ('Define -> FuncDef','Define',1,'p_Define','analyze.py',25),
  ('Decl -> ConstDecl','Decl',1,'p_Decl','analyze.py',31),
  ('Decl -> VarDecl','Decl',1,'p_Decl','analyze.py',32),
  ('ConstDecl -> Const BType ConstDefs Semicolon','ConstDecl',4,'p_ConstDecl','analyze.py',38),
  ('ConstDefs -> ConstDef','ConstDefs',1,'p_ConstDefs','analyze.py',44),
  ('ConstDefs -> ConstDefs Comma ConstDef','ConstDefs',3,'p_ConstDefs','analyze.py',45),
  ('BType -> Int','BType',1,'p_BType','analyze.py',54),
  ('BType -> Void','BType',1,'p_BType','analyze.py',55),
  ('ConstDef -> Ident Equal ConstInitVal','ConstDef',3,'p_ConstDef','analyze.py',65),
  ('ConstDef -> Ident ConstSubs Equal ConstInitVals','ConstDef',4,'p_ConstDef','analyze.py',66),
  ('ConstSubs -> ConstSub ConstSubs','ConstSubs',2,'p_ConstSubs','analyze.py',75),
  ('ConstSubs -> ConstSub','ConstSubs',1,'p_ConstSubs','analyze.py',76),
  ('ConstSub -> LSPar ConstExp RSPar','ConstSub',3,'p_ConstSub','analyze.py',85),
  ('ConstInitVal -> ConstExp','ConstInitVal',1,'p_ConstInitVal','analyze.py',91),
  ('ConstInitVal -> LBrace RBrace','ConstInitVal',2,'p_ConstInitVal','analyze.py',92),
  ('ConstInitVal -> LBrace ConstInitVals RBrace','ConstInitVal',3,'p_ConstInitVal','analyze.py',93),
  ('ConstInitVals -> ConstInitVal','ConstInitVals',1,'p_ConstInitVals','analyze.py',104),
  ('ConstInitVals -> ConstInitVal Comma ConstInitVals','ConstInitVals',3,'p_ConstInitVals','analyze.py',105),
  ('ConstExp -> AddExp','ConstExp',1,'p_ConstExp','analyze.py',114),
  ('VarDecl -> BType VarDefs Semicolon','VarDecl',3,'p_VarDecl','analyze.py',120),
  ('VarDefs -> VarDef','VarDefs',1,'p_Vardefs','analyze.py',126),
  ('VarDefs -> VarDefs Comma VarDef','VarDefs',3,'p_Vardefs','analyze.py',127),
  ('VarDef -> Ident','VarDef',1,'p_VarDef','analyze.py',136),
  ('VarDef -> Ident ConstSubs','VarDef',2,'p_VarDef','analyze.py',137),
  ('VarDef -> Ident Equal InitVal','VarDef',3,'p_VarDef','analyze.py',138),
  ('VarDef -> Ident ConstSubs Equal InitVals','VarDef',4,'p_VarDef','analyze.py',139),
  ('InitVals -> InitVal','InitVals',1,'p_InitVals','analyze.py',153),
  ('InitVals -> InitVal Comma InitVals','InitVals',3,'p_InitVals','analyze.py',154),
  ('InitVal -> Exp','InitVal',1,'p_InitVal','analyze.py',163),
  ('InitVal -> LBrace RBrace','InitVal',2,'p_InitVal','analyze.py',164),
  ('InitVal -> LBrace InitVals RBrace','InitVal',3,'p_InitVal','analyze.py',165),
  ('FuncDef -> BType Ident LPar RPar Block','FuncDef',5,'p_Funcdef','analyze.py',176),
  ('FuncDef -> BType Ident LPar FuncFParams RPar Block','FuncDef',6,'p_Funcdef','analyze.py',177),
  ('FuncFParams -> FuncFParam','FuncFParams',1,'p_FuncFParams','analyze.py',187),
  ('FuncFParams -> FuncFParam Comma FuncFParams','FuncFParams',3,'p_FuncFParams','analyze.py',188),
  ('FuncFParam -> BType Ident','FuncFParam',2,'p_FuncFParam','analyze.py',197),
  ('FuncFParam -> BType Ident LSPar RSPar','FuncFParam',4,'p_FuncFParam','analyze.py',198),
  ('FuncFParam -> BType Ident LSPar RSPar ParParams','FuncFParam',5,'p_FuncFParam','analyze.py',199),
  ('ParParams -> LSPar Exp RSPar','ParParams',3,'p_ParParams','analyze.py',205),
  ('ParParams -> LSPar Exp RSPar ParParams','ParParams',4,'p_ParParams','analyze.py',206),
  ('Block -> LBrace BlockItems RBrace','Block',3,'p_Block','analyze.py',215),
  ('BlockItems -> <empty>','BlockItems',0,'p_BlockItems','analyze.py',223),
  ('BlockItems -> BlockItems BlockItem','BlockItems',2,'p_BlockItems','analyze.py',224),
  ('BlockItem -> Decl','BlockItem',1,'p_BlockItem','analyze.py',236),
  ('BlockItem -> Stmt','BlockItem',1,'p_BlockItem','analyze.py',237),
  ('Stmt -> Semicolon','Stmt',1,'p_Stmt','analyze.py',243),
  ('Stmt -> Block','Stmt',1,'p_Stmt','analyze.py',244),
  ('Stmt -> Break','Stmt',1,'p_Stmt','analyze.py',245),
  ('Stmt -> Continue','Stmt',1,'p_Stmt','analyze.py',246),
  ('Stmt -> Exp Semicolon','Stmt',2,'p_Stmt','analyze.py',247),
  ('Stmt -> Return Semicolon','Stmt',2,'p_Stmt','analyze.py',248),
  ('Stmt -> Return Exp Semicolon','Stmt',3,'p_Stmt','analyze.py',249),
  ('Stmt -> LVal Equal Exp Semicolon','Stmt',4,'p_Stmt','analyze.py',250),
  ('Stmt -> While LPar Cond RPar Stmt','Stmt',5,'p_Stmt','analyze.py',251),
  ('Stmt -> If LPar Cond RPar Stmt Else Stmt','Stmt',7,'p_Stmt','analyze.py',252),
  ('Stmt -> If LPar Cond RPar Stmt','Stmt',5,'p_Stmt','analyze.py',253),
  ('LVal -> Ident ConstSubs','LVal',2,'p_LVal','analyze.py',279),
  ('LVal -> Ident','LVal',1,'p_LVal','analyze.py',280),
  ('Exp -> AddExp','Exp',1,'p_Exp','analyze.py',289),
  ('AddExp -> MulExp','AddExp',1,'p_Addexp','analyze.py',295),
  ('AddExp -> AddExp Plus MulExp','AddExp',3,'p_Addexp','analyze.py',296),
  ('AddExp -> AddExp Minus MulExp','AddExp',3,'p_Addexp','analyze.py',297),
  ('MulExp -> UnaryExp','MulExp',1,'p_MulExp','analyze.py',307),
  ('MulExp -> MulExp Times UnaryExp','MulExp',3,'p_MulExp','analyze.py',308),
  ('MulExp -> MulExp Div UnaryExp','MulExp',3,'p_MulExp','analyze.py',309),
  ('MulExp -> MulExp Mod UnaryExp','MulExp',3,'p_MulExp','analyze.py',310),
  ('UnaryExp -> PrimaryExp','UnaryExp',1,'p_UnaryExp','analyze.py',319),
  ('UnaryExp -> UnaryOp UnaryExp','UnaryExp',2,'p_UnaryExp','analyze.py',320),
  ('UnaryExp -> Ident LPar RPar','UnaryExp',3,'p_UnaryExp','analyze.py',321),
  ('UnaryExp -> Ident LPar FuncRParams RPar','UnaryExp',4,'p_UnaryExp','analyze.py',322),
  ('FuncRParams -> Exp','FuncRParams',1,'p_FuncRParams','analyze.py',335),
  ('FuncRParams -> Exp Exps','FuncRParams',2,'p_FuncRParams','analyze.py',336),
  ('Exps -> Comma Exp','Exps',2,'p_Exps','analyze.py',345),
  ('Exps -> Comma Exp Exps','Exps',3,'p_Exps','analyze.py',346),
  ('PrimaryExp -> LPar Exp RPar','PrimaryExp',3,'p_PrimaryExp','analyze.py',355),
  ('PrimaryExp -> Number','PrimaryExp',1,'p_PrimaryExp','analyze.py',356),
  ('PrimaryExp -> LVal','PrimaryExp',1,'p_PrimaryExp','analyze.py',357),
  ('UnaryOp -> Plus','UnaryOp',1,'p_UnaryOp','analyze.py',371),
  ('UnaryOp -> Minus','UnaryOp',1,'p_UnaryOp','analyze.py',372),
  ('UnaryOp -> Not','UnaryOp',1,'p_UnaryOp','analyze.py',373),
  ('Cond -> LOrExp','Cond',1,'p_Cond','analyze.py',379),
  ('LOrExp -> LAndExp','LOrExp',1,'p_LOrExp','analyze.py',385),
  ('LOrExp -> LOrExp Or LAndExp','LOrExp',3,'p_LOrExp','analyze.py',386),
  ('LAndExp -> EqExp','LAndExp',1,'p_LAndExp','analyze.py',395),
  ('LAndExp -> LAndExp And EqExp','LAndExp',3,'p_LAndExp','analyze.py',396),
  ('EqExp -> RelExp','EqExp',1,'p_EqExp','analyze.py',405),
  ('EqExp -> EqExp Deq RelExp','EqExp',3,'p_EqExp','analyze.py',406),
  ('EqExp -> EqExp Neq RelExp','EqExp',3,'p_EqExp','analyze.py',407),
  ('RelExp -> AddExp','RelExp',1,'p_RelExp','analyze.py',416),
  ('RelExp -> RelExp Less AddExp','RelExp',3,'p_RelExp','analyze.py',417),
  ('RelExp -> RelExp More AddExp','RelExp',3,'p_RelExp','analyze.py',418),
  ('RelExp -> RelExp Leq AddExp','RelExp',3,'p_RelExp','analyze.py',419),
  ('RelExp -> RelExp Geq AddExp','RelExp',3,'p_RelExp','analyze.py',420),
]
